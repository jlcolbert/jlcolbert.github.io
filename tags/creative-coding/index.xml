<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>creative coding on jay l. colbert</title><link>https://wilde-at-heart.garden/tags/creative-coding/</link><description>Recent content in creative coding on jay l. colbert</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 28 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://wilde-at-heart.garden/tags/creative-coding/index.xml" rel="self" type="application/rss+xml"/><item><title>longing release</title><link>https://wilde-at-heart.garden/pages/longing-release/</link><pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate><guid>https://wilde-at-heart.garden/pages/longing-release/</guid><description>I made this piece as part of the &amp;ldquo;Concentrated Creativity&amp;rdquo; BASB alumni sprint.
It is a piece of generative art made with the Clojure programming language and the Quil and genartlib libraries. The base code is inspired by the Golden Ratio Flower by Jack Rusher.
The part of my code that actually draws the above is:
(def palette (cycle [[326 100 61] [0 0 0] [0 0 100]])) (def PHI (/ (+ 1 (Math/sqrt 5)) 2)) (defn gauss [mean variance] (+ mean (* variance (q/random-gaussian)))) (defn actual-draw [] ; art goes here (q/frame-rate 10) (q/no-stroke) (q/background 0 0 60) (q/with-translation [(w 0.</description></item></channel></rss>